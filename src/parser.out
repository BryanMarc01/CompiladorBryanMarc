Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> statement_list
Rule 2     statement_list -> statement
Rule 3     statement_list -> statement_list statement
Rule 4     statement -> assignment_statement
Rule 5     assignment_statement -> ID EQUALS expression SEMICOLON
Rule 6     expression -> expression PLUS term
Rule 7     expression -> term
Rule 8     term -> NUMBER
Rule 9     term -> ID

Terminals, with rules where they appear

EQUALS               : 5
ID                   : 5 9
NUMBER               : 8
PLUS                 : 6
SEMICOLON            : 5
error                : 

Nonterminals, with rules where they appear

assignment_statement : 4
expression           : 5 6
program              : 0
statement            : 2 3
statement_list       : 1 3
term                 : 6 7

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement_list
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (4) statement -> . assignment_statement
    (5) assignment_statement -> . ID EQUALS expression SEMICOLON

    ID              shift and go to state 5

    program                        shift and go to state 1
    statement_list                 shift and go to state 2
    statement                      shift and go to state 3
    assignment_statement           shift and go to state 4

state 1

    (0) S' -> program .



state 2

    (1) program -> statement_list .
    (3) statement_list -> statement_list . statement
    (4) statement -> . assignment_statement
    (5) assignment_statement -> . ID EQUALS expression SEMICOLON

    $end            reduce using rule 1 (program -> statement_list .)
    ID              shift and go to state 5

    statement                      shift and go to state 6
    assignment_statement           shift and go to state 4

state 3

    (2) statement_list -> statement .

    ID              reduce using rule 2 (statement_list -> statement .)
    $end            reduce using rule 2 (statement_list -> statement .)


state 4

    (4) statement -> assignment_statement .

    ID              reduce using rule 4 (statement -> assignment_statement .)
    $end            reduce using rule 4 (statement -> assignment_statement .)


state 5

    (5) assignment_statement -> ID . EQUALS expression SEMICOLON

    EQUALS          shift and go to state 7


state 6

    (3) statement_list -> statement_list statement .

    ID              reduce using rule 3 (statement_list -> statement_list statement .)
    $end            reduce using rule 3 (statement_list -> statement_list statement .)


state 7

    (5) assignment_statement -> ID EQUALS . expression SEMICOLON
    (6) expression -> . expression PLUS term
    (7) expression -> . term
    (8) term -> . NUMBER
    (9) term -> . ID

    NUMBER          shift and go to state 11
    ID              shift and go to state 8

    expression                     shift and go to state 9
    term                           shift and go to state 10

state 8

    (9) term -> ID .

    SEMICOLON       reduce using rule 9 (term -> ID .)
    PLUS            reduce using rule 9 (term -> ID .)


state 9

    (5) assignment_statement -> ID EQUALS expression . SEMICOLON
    (6) expression -> expression . PLUS term

    SEMICOLON       shift and go to state 12
    PLUS            shift and go to state 13


state 10

    (7) expression -> term .

    SEMICOLON       reduce using rule 7 (expression -> term .)
    PLUS            reduce using rule 7 (expression -> term .)


state 11

    (8) term -> NUMBER .

    SEMICOLON       reduce using rule 8 (term -> NUMBER .)
    PLUS            reduce using rule 8 (term -> NUMBER .)


state 12

    (5) assignment_statement -> ID EQUALS expression SEMICOLON .

    ID              reduce using rule 5 (assignment_statement -> ID EQUALS expression SEMICOLON .)
    $end            reduce using rule 5 (assignment_statement -> ID EQUALS expression SEMICOLON .)


state 13

    (6) expression -> expression PLUS . term
    (8) term -> . NUMBER
    (9) term -> . ID

    NUMBER          shift and go to state 11
    ID              shift and go to state 8

    term                           shift and go to state 14

state 14

    (6) expression -> expression PLUS term .

    SEMICOLON       reduce using rule 6 (expression -> expression PLUS term .)
    PLUS            reduce using rule 6 (expression -> expression PLUS term .)

